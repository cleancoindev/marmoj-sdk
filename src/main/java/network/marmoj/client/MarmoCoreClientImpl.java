package network.marmoj.client;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

import static org.web3j.abi.Utils.typeMap;

public class MarmoCoreClientImpl extends Contract implements MarmoCoreClient {

    private static final String BINARY = "608060405234801561001057600080fd5b50610f0b806100206000396000f3fe6080604052600436106100a8577c010000000000000000000000000000000000000000000000000000000060003504630f694e2681146100aa578063238ac933146100f05780632e52d606146101055780633f7a02701461012c57806361b69fde1461015657806366d38203146101945780637747201d146101c7578063a3f4df7e1461031e578063b8bb3eba146103a8578063c4d252f514610611578063ffa1ad741461063b575b005b3480156100b657600080fd5b506100d4600480360360208110156100cd57600080fd5b5035610650565b60408051600160a060020a039092168252519081900360200190f35b3480156100fc57600080fd5b506100d461066b565b34801561011157600080fd5b5061011a61067a565b60408051918252519081900360200190f35b34801561013857600080fd5b506100a86004803603602081101561014f57600080fd5b5035610680565b34801561016257600080fd5b506101806004803603602081101561017957600080fd5b5035610685565b604080519115158252519081900360200190f35b3480156101a057600080fd5b506100a8600480360360208110156101b757600080fd5b5035600160a060020a031661069a565b3480156101d357600080fd5b5061011a600480360360e08110156101ea57600080fd5b81019060208101813564010000000081111561020557600080fd5b82018360208201111561021757600080fd5b8035906020019184602083028401116401000000008311171561023957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295600160a060020a038535169560208601359591945092506060810191506040013564010000000081111561029e57600080fd5b8201836020820111156102b057600080fd5b803590602001918460018302840111640100000000831117156102d257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050823593505050602081013590604001356106a6565b34801561032a57600080fd5b50610333610781565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561036d578181015183820152602001610355565b50505050905090810190601f16801561039a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103b457600080fd5b5061058e60048036036101008110156103cc57600080fd5b8101906020810181356401000000008111156103e757600080fd5b8201836020820111156103f957600080fd5b8035906020019184602083028401116401000000008311171561041b57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295600160a060020a038535169560208601359591945092506060810191506040013564010000000081111561048057600080fd5b82018360208201111561049257600080fd5b803590602001918460018302840111640100000000831117156104b457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359560408101359550919350915060808101906060013564010000000081111561051957600080fd5b82018360208201111561052b57600080fd5b8035906020019184600183028401116401000000008311171561054d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107b8945050505050565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105d55781810151838201526020016105bd565b50505050905090810190601f1680156106025780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561061d57600080fd5b506100a86004803603602081101561063457600080fd5b5035610b4d565b34801561064757600080fd5b50610333610c2c565b600260205260009081526040902054600160a060020a031681565b600054600160a060020a031681565b60015481565b600155565b60036020526000908152604090205460ff1681565b6106a381610c63565b50565b6000308860405160200180828051906020019060200280838360005b838110156106da5781810151838201526020016106c2565b50506040805193909501838103601f1901845280865283516020948501208e519e85019e909e20600160a060020a03998a166c0100000000000000000000000090810286840152603483019f909f529f909816909c02605488015250606886019b909b5250608884019a909a52505060a88101949094525060c883019190915260e88083019190915284518083039091018152610108909101909352508151910120919050565b60408051808201909152600a81527f4d61726d6f20436f726500000000000000000000000000000000000000000000602082015281565b6000606060006107cd8b8b8b8b8b8b8b6106a6565b90503a8610156107dc57600080fd5b60008181526003602052604090205460ff1615610843576040805160e560020a62461bcd02815260206004820152601860248201527f5472616e73616374696f6e207761732063616e63656c65640000000000000000604482015290519081900360640190fd5b600081815260026020526040902054600160a060020a0316156108b0576040805160e560020a62461bcd02815260206004820152601b60248201527f5472616e73616374696f6e20616c72656164792072656c617965640000000000604482015290519081900360640190fd5b6108b98b610c6c565b151561090f576040805160e560020a62461bcd02815260206004820152601660248201527f506172656e742072656c6179206e6f7420666f756e6400000000000000000000604482015290519081900360640190fd5b6109198185610cdc565b865a1161092557600080fd5b89600160a060020a031689896040518082805190602001908083835b602083106109605780518252601f199092019160209182019101610941565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146109c2576040519150601f19603f3d011682016040523d82523d6000602084013e6109c7565b606091505b508093508194505050336002600083815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055507fd610b46dae235a6112d33d972dfa88cb371146a053e13c3222aa14f07d576ea9818c8c8c8c8a338a604051808981526020018060200188600160a060020a0316600160a060020a031681526020018781526020018060200186815260200185600160a060020a0316600160a060020a031681526020018415151515815260200183810383528a818151815260200191508051906020019060200280838360005b83811015610ac1578181015183820152602001610aa9565b50505050905001838103825287818151815260200191508051906020019080838360005b83811015610afd578181015183820152602001610ae5565b50505050905090810190601f168015610b2a5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a1509850989650505050505050565b333014610ba4576040805160e560020a62461bcd02815260206004820152601a60248201527f4f6e6c792077616c6c65742063616e2063616e63656c20747873000000000000604482015290519081900360640190fd5b600081815260026020526040902054600160a060020a031615610c11576040805160e560020a62461bcd02815260206004820152601f60248201527f5472616e73616374696f6e2077617320616c72656164792072656c6179656400604482015290519081900360640190fd5b6000908152600360205260409020805460ff19166001179055565b60408051808201909152600581527f302e312e30000000000000000000000000000000000000000000000000000000602082015281565b6106a381610d4e565b6000805b8251811015610cd1576000600160a060020a0316600260008584815181101515610c9657fe5b6020908102909101810151825281019190915260400160002054600160a060020a03161415610cc9576000915050610cd7565b600101610c70565b50600190505b919050565b6000610ce88383610e3b565b9050610cf381610ecb565b1515610d49576040805160e560020a62461bcd02815260206004820181905260248201527f5369676e6174757265206e6f742070726f7669646564206279207369676e6572604482015290519081900360640190fd5b505050565b600160a060020a0381161515610dd4576040805160e560020a62461bcd02815260206004820152603d60248201527f496e76616c6964206f776e657220616464726573732070726f76696465642c2060448201527f7369676e657220616464726573732063616e6e6f74206265206e756c6c000000606482015290519081900360840190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091179182905560408051929091168252517f82b74755d483f0688b80354268454667c377a5684e64a4dbb6820fc11a6276d4916020908290030190a150565b602081015160408201516041830151600092919060ff16601b811015610e5f57601b015b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015610eb6573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600054600160a060020a039182169116149056fea165627a7a72305820775cca0de045329da29ced6636a528847de83ef86d53edf2c45549d1f986e0d80029";
    public static final String FUNC_ENCODETRANSACTIONDATA = "encodeTransactionData";

    protected MarmoCoreClientImpl(String contractAddress, Web3j web3j, Credentials credentials,
                                  ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Override
    public RemoteCall<byte[]> encodeTransactionData(List<byte[]> _dependencies, String _to, BigInteger _value,
                                                    byte[] _data, BigInteger _minGasLimit, BigInteger _maxGasPrice,
                                                    byte[] _salt) {

        DynamicArray<Bytes32> bytes32DynamicArray = DynamicArray.empty("bytes32[]");
        if (!_dependencies.isEmpty()) {
            bytes32DynamicArray = new DynamicArray<>(typeMap(_dependencies, Bytes32.class));
        }

        final Function function = new Function(FUNC_ENCODETRANSACTIONDATA,
                Arrays.asList(
                        bytes32DynamicArray,
                        new Address(_to),
                        new Uint256(_value),
                        new DynamicBytes(_data),
                        new Uint256(_minGasLimit),
                        new Uint256(_maxGasPrice),
                        new Bytes32(_salt)),
                Arrays.asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

}
